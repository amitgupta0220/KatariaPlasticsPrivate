define(['dart_sdk', 'packages/firebase_storage_web/src/utils/metadata_cache.dart', 'packages/firebase_storage_web/src/utils/errors.dart', 'packages/firebase_storage_web/src/utils/metadata.dart', 'packages/firebase_storage_platform_interface/src/full_metadata.dart', 'packages/firebase_storage_web/src/utils/list.dart', 'packages/firebase_storage_platform_interface/src/platform_interface/platform_interface_task_snapshot.dart', 'packages/http/http.dart', 'packages/firebase_storage_web/src/task_web.dart', 'packages/crypto/src/md5.dart', 'packages/firebase_storage_web/src/interop/storage.dart', 'packages/firebase_core_web/src/interop/core.dart', 'packages/firebase_core_platform_interface/firebase_core_platform_interface.dart'], (function load__packages__firebase_storage_web__src__reference_web_dart(dart_sdk, packages__firebase_storage_web__src__utils__metadata_cache$46dart, packages__firebase_storage_web__src__utils__errors$46dart, packages__firebase_storage_web__src__utils__metadata$46dart, packages__firebase_storage_platform_interface__src__full_metadata$46dart, packages__firebase_storage_web__src__utils__list$46dart, packages__firebase_storage_platform_interface__src__platform_interface__platform_interface_task_snapshot$46dart, packages__http__http$46dart, packages__firebase_storage_web__src__task_web$46dart, packages__crypto__src__md5$46dart, packages__firebase_storage_web__src__interop__storage$46dart, packages__firebase_core_web__src__interop__core$46dart, packages__firebase_core_platform_interface__firebase_core_platform_interface$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const typed_data = dart_sdk.typed_data;
  const html = dart_sdk.html;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const metadata_cache = packages__firebase_storage_web__src__utils__metadata_cache$46dart.src__utils__metadata_cache;
  const errors = packages__firebase_storage_web__src__utils__errors$46dart.src__utils__errors;
  const metadata$ = packages__firebase_storage_web__src__utils__metadata$46dart.src__utils__metadata;
  const full_metadata = packages__firebase_storage_platform_interface__src__full_metadata$46dart.src__full_metadata;
  const list = packages__firebase_storage_web__src__utils__list$46dart.src__utils__list;
  const platform_interface_list_result = packages__firebase_storage_platform_interface__src__platform_interface__platform_interface_task_snapshot$46dart.src__platform_interface__platform_interface_list_result;
  const platform_interface_reference = packages__firebase_storage_platform_interface__src__platform_interface__platform_interface_task_snapshot$46dart.src__platform_interface__platform_interface_reference;
  const platform_interface_firebase_storage = packages__firebase_storage_platform_interface__src__platform_interface__platform_interface_task_snapshot$46dart.src__platform_interface__platform_interface_firebase_storage;
  const http = packages__http__http$46dart.http;
  const task_web = packages__firebase_storage_web__src__task_web$46dart.src__task_web;
  const md5 = packages__crypto__src__md5$46dart.src__md5;
  const storage = packages__firebase_storage_web__src__interop__storage$46dart.src__interop__storage;
  const core$ = packages__firebase_core_web__src__interop__core$46dart.src__interop__core;
  const firebase_core_platform_interface = packages__firebase_core_platform_interface__firebase_core_platform_interface$46dart.firebase_core_platform_interface;
  var reference_web = Object.create(dart.library);
  var firebase_storage_web = Object.create(dart.library);
  var $startsWith = dartx.startsWith;
  var $codeUnits = dartx.codeUnits;
  dart._checkModuleNullSafetyMode(false);
  var StringL = () => (StringL = dart.constFn(dart.legacy(core.String)))();
  var FullMetadataL = () => (FullMetadataL = dart.constFn(dart.legacy(full_metadata.FullMetadata)))();
  var ListResultPlatformL = () => (ListResultPlatformL = dart.constFn(dart.legacy(platform_interface_list_result.ListResultPlatform)))();
  var Uint8ListL = () => (Uint8ListL = dart.constFn(dart.legacy(typed_data.Uint8List)))();
  var FutureOfUint8ListL = () => (FutureOfUint8ListL = dart.constFn(async.Future$(Uint8ListL())))();
  var FutureLOfUint8ListL = () => (FutureLOfUint8ListL = dart.constFn(dart.legacy(FutureOfUint8ListL())))();
  var MapOfStringL$StringL = () => (MapOfStringL$StringL = dart.constFn(core.Map$(StringL(), StringL())))();
  var MapLOfStringL$StringL = () => (MapLOfStringL$StringL = dart.constFn(dart.legacy(MapOfStringL$StringL())))();
  var dynamic__ToFutureLOfUint8ListL = () => (dynamic__ToFutureLOfUint8ListL = dart.constFn(dart.fnType(FutureLOfUint8ListL(), [dart.dynamic], {headers: MapLOfStringL$StringL()}, {})))();
  var BlobL = () => (BlobL = dart.constFn(dart.legacy(html.Blob)))();
  const CT = Object.create(null);
  var L1 = "package:firebase_storage_web/src/reference_web.dart";
  var L2 = "package:firebase_storage_web/src/firebase_storage_web.dart";
  var L0 = "file:///C:/Users/Dell/AppData/Roaming/Pub/Cache/hosted/pub.dartlang.org/firebase_storage_web-0.1.1+1/lib/src/reference_web.dart";
  dart.defineLazy(CT, {
    get C0() {
      return C0 = dart.fn(http.readBytes, dynamic__ToFutureLOfUint8ListL());
    }
  }, false);
  var _ref = dart.privateName(reference_web, "_ref");
  var _cache = dart.privateName(reference_web, "_cache");
  var _path = dart.privateName(reference_web, "_path");
  var C0;
  reference_web.ReferenceWeb = class ReferenceWeb extends platform_interface_reference.ReferencePlatform {
    delete() {
      return async.async(dart.void, (function* $delete() {
        try {
          yield this[_ref].delete();
        } catch (e$) {
          let e = dart.getThrown(e$);
          dart.throw(errors.getFirebaseException(e));
        }
      }).bind(this));
    }
    getDownloadURL() {
      return async.async(StringL(), (function* getDownloadURL() {
        try {
          let uri = (yield this[_ref].getDownloadURL());
          return dart.toString(uri);
        } catch (e$) {
          let e = dart.getThrown(e$);
          dart.throw(errors.getFirebaseException(e));
        }
      }).bind(this));
    }
    getMetadata() {
      return async.async(FullMetadataL(), (function* getMetadata() {
        try {
          let fullMetadata = (yield this[_ref].getMetadata());
          return metadata$.fbFullMetadataToFullMetadata(fullMetadata);
        } catch (e$) {
          let e = dart.getThrown(e$);
          dart.throw(errors.getFirebaseException(e));
        }
      }).bind(this));
    }
    list(options) {
      return async.async(ListResultPlatformL(), (function* list$() {
        try {
          let listResult = (yield this[_ref].list(list.listOptionsToFbListOptions(options)));
          return list.fbListResultToListResultWeb(this.storage, listResult);
        } catch (e$) {
          let e = dart.getThrown(e$);
          dart.throw(errors.getFirebaseException(e));
        }
      }).bind(this));
    }
    listAll() {
      return async.async(ListResultPlatformL(), (function* listAll() {
        try {
          let listResult = (yield this[_ref].listAll());
          return list.fbListResultToListResultWeb(this.storage, listResult);
        } catch (e$) {
          let e = dart.getThrown(e$);
          dart.throw(errors.getFirebaseException(e));
        }
      }).bind(this));
    }
    getData(maxSize, opts) {
      let readBytes = opts && 'readBytes' in opts ? opts.readBytes : C0 || CT.C0;
      return async.async(Uint8ListL(), (function* getData() {
        if (dart.notNull(maxSize) > 0) {
          let metadata = (yield this.getMetadata());
          if (dart.notNull(metadata.size) > dart.notNull(maxSize)) {
            return null;
          }
        }
        try {
          let url = (yield this.getDownloadURL());
          return yield readBytes(url);
        } catch (e$) {
          let e = dart.getThrown(e$);
          dart.throw(errors.getFirebaseException(e));
        }
      }).bind(this));
    }
    putData(data, metadata = null) {
      return new task_web.TaskWeb.new(this, this[_ref].put(data, metadata$.settableMetadataToFbUploadMetadata(this[_cache].store(metadata), {md5Hash: dart.toString(md5.md5.convert(data))})));
    }
    putBlob(data, metadata = null) {
      if (!BlobL().is(data)) dart.assertFailed("data must be a dart:html Blob object.", L0, 172, 12, "data is html.Blob");
      return new task_web.TaskWeb.new(this, this[_ref].put(data, metadata$.settableMetadataToFbUploadMetadata(this[_cache].store(metadata))));
    }
    putString(data, format, metadata = null) {
      return new task_web.TaskWeb.new(this, this[_ref].putString(data, metadata$.putStringFormatToString(format), metadata$.settableMetadataToFbUploadMetadata(this[_cache].store(metadata), {md5Hash: dart.toString(md5.md5.convert(data[$codeUnits]))})));
    }
    updateMetadata(metadata) {
      return async.async(FullMetadataL(), (function* updateMetadata() {
        try {
          let fullMetadata = (yield this[_ref].updateMetadata(metadata$.settableMetadataToFbSettableMetadata(this[_cache].store(metadata))));
          return metadata$.fbFullMetadataToFullMetadata(fullMetadata);
        } catch (e$) {
          let e = dart.getThrown(e$);
          dart.throw(errors.getFirebaseException(e));
        }
      }).bind(this));
    }
  };
  (reference_web.ReferenceWeb.new = function(storage, path) {
    this[_ref] = null;
    this[_cache] = new metadata_cache.SettableMetadataCache.new();
    this[_path] = path;
    reference_web.ReferenceWeb.__proto__.new.call(this, storage, path);
    if (this[_path] != null && this[_path][$startsWith](reference_web._storageUrlPrefix)) {
      this[_ref] = storage.webStorage.refFromURL(this[_path]);
    } else {
      this[_ref] = storage.webStorage.ref(this[_path]);
    }
  }).prototype = reference_web.ReferenceWeb.prototype;
  dart.addTypeTests(reference_web.ReferenceWeb);
  dart.addTypeCaches(reference_web.ReferenceWeb);
  dart.setMethodSignature(reference_web.ReferenceWeb, () => ({
    __proto__: dart.getMethods(reference_web.ReferenceWeb.__proto__),
    getData: dart.fnType(dart.legacy(async.Future$(dart.legacy(typed_data.Uint8List))), [dart.legacy(core.int)], {readBytes: dart.legacy(dart.fnType(dart.legacy(async.Future$(dart.legacy(typed_data.Uint8List))), [dart.dynamic]))}, {})
  }));
  dart.setLibraryUri(reference_web.ReferenceWeb, L1);
  dart.setFieldSignature(reference_web.ReferenceWeb, () => ({
    __proto__: dart.getFields(reference_web.ReferenceWeb.__proto__),
    [_ref]: dart.fieldType(dart.legacy(storage.StorageReference)),
    [_cache]: dart.finalFieldType(dart.legacy(metadata_cache.SettableMetadataCache)),
    [_path]: dart.finalFieldType(dart.legacy(core.String))
  }));
  dart.defineLazy(reference_web, {
    /*reference_web._storageUrlPrefix*/get _storageUrlPrefix() {
      return core.RegExp.new("^(?:gs|https?)://");
    }
  }, true);
  var _maxDownloadRetryTime = dart.privateName(firebase_storage_web, "_maxDownloadRetryTime");
  var _maxOperationRetryTime = dart.privateName(firebase_storage_web, "_maxOperationRetryTime");
  var _createReference = dart.privateName(firebase_storage_web, "_createReference");
  var webStorage$ = dart.privateName(firebase_storage_web, "FirebaseStorageWeb.webStorage");
  firebase_storage_web.FirebaseStorageWeb = class FirebaseStorageWeb extends platform_interface_firebase_storage.FirebaseStoragePlatform {
    get webStorage() {
      return this[webStorage$];
    }
    set webStorage(value) {
      super.webStorage = value;
    }
    static registerWith(registrar) {
      platform_interface_firebase_storage.FirebaseStoragePlatform.instance = new firebase_storage_web.FirebaseStorageWeb._nullInstance();
    }
    delegateFor(opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let bucket = opts && 'bucket' in opts ? opts.bucket : null;
      if (bucket == null) {
        dart.throw(new firebase_core_platform_interface.FirebaseException.new({message: "No storage bucket could be found for the app '" + dart.str(app.name) + "'. Ensure you have set the [storageBucket] on [FirebaseOptions] whilst initializing the secondary Firebase app.", plugin: "firebase_storage"}));
      }
      return new firebase_storage_web.FirebaseStorageWeb.new({app: app, bucket: bucket});
    }
    get maxOperationRetryTime() {
      return this[_maxOperationRetryTime];
    }
    get maxUploadRetryTime() {
      return this.webStorage.maxUploadRetryTime;
    }
    get maxDownloadRetryTime() {
      return this[_maxDownloadRetryTime];
    }
    ref(path, opts) {
      let t7;
      let refBuilder = opts && 'refBuilder' in opts ? opts.refBuilder : null;
      let ref = null;
      try {
        let refBuilderFunction = (t7 = refBuilder, t7 == null ? dart.bind(this, _createReference) : t7);
        ref = refBuilderFunction(this, path);
      } catch (e$) {
        let e = dart.getThrown(e$);
        dart.throw(errors.getFirebaseException(e));
      }
      return ref;
    }
    [_createReference](storage, path) {
      return new reference_web.ReferenceWeb.new(storage, path);
    }
    setMaxOperationRetryTime(time) {
      this[_maxOperationRetryTime] = time;
      this.webStorage.setMaxOperationRetryTime(time);
    }
    setMaxUploadRetryTime(time) {
      this.webStorage.setMaxUploadRetryTime(time);
    }
    setMaxDownloadRetryTime(time) {
      this[_maxDownloadRetryTime] = time;
    }
  };
  (firebase_storage_web.FirebaseStorageWeb._nullInstance = function() {
    this[_maxDownloadRetryTime] = new core.Duration.new({minutes: 10}).inMilliseconds;
    this[_maxOperationRetryTime] = new core.Duration.new({minutes: 2}).inMilliseconds;
    this[webStorage$] = null;
    firebase_storage_web.FirebaseStorageWeb.__proto__.new.call(this);
    ;
  }).prototype = firebase_storage_web.FirebaseStorageWeb.prototype;
  (firebase_storage_web.FirebaseStorageWeb.new = function(opts) {
    let t7;
    let app = opts && 'app' in opts ? opts.app : null;
    let bucket = opts && 'bucket' in opts ? opts.bucket : null;
    this[_maxDownloadRetryTime] = new core.Duration.new({minutes: 10}).inMilliseconds;
    this[_maxOperationRetryTime] = new core.Duration.new({minutes: 2}).inMilliseconds;
    this[webStorage$] = storage.getStorageInstance(core$.app((t7 = app, t7 == null ? null : t7.name)));
    firebase_storage_web.FirebaseStorageWeb.__proto__.new.call(this, {appInstance: app, bucket: bucket});
    ;
  }).prototype = firebase_storage_web.FirebaseStorageWeb.prototype;
  (firebase_storage_web.FirebaseStorageWeb.forMock = function(webStorage, opts) {
    let bucket = opts && 'bucket' in opts ? opts.bucket : null;
    let app = opts && 'app' in opts ? opts.app : null;
    this[_maxDownloadRetryTime] = new core.Duration.new({minutes: 10}).inMilliseconds;
    this[_maxOperationRetryTime] = new core.Duration.new({minutes: 2}).inMilliseconds;
    this[webStorage$] = webStorage;
    firebase_storage_web.FirebaseStorageWeb.__proto__.new.call(this, {appInstance: app, bucket: bucket});
    ;
  }).prototype = firebase_storage_web.FirebaseStorageWeb.prototype;
  dart.addTypeTests(firebase_storage_web.FirebaseStorageWeb);
  dart.addTypeCaches(firebase_storage_web.FirebaseStorageWeb);
  dart.setMethodSignature(firebase_storage_web.FirebaseStorageWeb, () => ({
    __proto__: dart.getMethods(firebase_storage_web.FirebaseStorageWeb.__proto__),
    ref: dart.fnType(dart.legacy(platform_interface_reference.ReferencePlatform), [dart.legacy(core.String)], {refBuilder: dart.legacy(dart.fnType(dart.legacy(platform_interface_reference.ReferencePlatform), [dart.legacy(firebase_storage_web.FirebaseStorageWeb), dart.legacy(core.String)]))}, {}),
    [_createReference]: dart.fnType(dart.legacy(platform_interface_reference.ReferencePlatform), [dart.legacy(firebase_storage_web.FirebaseStorageWeb), dart.legacy(core.String)])
  }));
  dart.setLibraryUri(firebase_storage_web.FirebaseStorageWeb, L2);
  dart.setFieldSignature(firebase_storage_web.FirebaseStorageWeb, () => ({
    __proto__: dart.getFields(firebase_storage_web.FirebaseStorageWeb.__proto__),
    webStorage: dart.finalFieldType(dart.legacy(storage.Storage)),
    [_maxDownloadRetryTime]: dart.fieldType(dart.legacy(core.int)),
    [_maxOperationRetryTime]: dart.fieldType(dart.legacy(core.int))
  }));
  dart.trackLibraries("packages/firebase_storage_web/src/reference_web.dart", {
    "package:firebase_storage_web/src/reference_web.dart": reference_web,
    "package:firebase_storage_web/src/firebase_storage_web.dart": firebase_storage_web
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["reference_web.dart","firebase_storage_web.dart"],"names":[],"mappings":"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","file":"../../../../../../../../../../../../D:/packages/firebase_storage_web/src/reference_web.dart.lib.js"}');
  // Exports:
  return {
    src__reference_web: reference_web,
    src__firebase_storage_web: firebase_storage_web
  };
}));

//# sourceMappingURL=reference_web.dart.lib.js.map
